
# Utku Gungor - 2237477


# %rdi = src, %rsi = dst, %rdx = len
ncopy:


# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0;
	andq %rdx,%rdx		# len <= 0?
	jle Done		# if so, goto Done:

Loop:	mrmovq (%rdi), %r10	# read val from src...
	rmmovq %r10, (%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle Npos		# if so, goto Npos:
	iaddq $1, %rax		# count++ by using iaddq, so that 1 instruction is used instead of 2
				# and register %r10 will not be used in next steps to hold constant  
				# since iaddq instruction does this job .
Npos:	
	iaddq $-1, %rdx		# len-- , no need to use %r10, less instructions and less registers are used. 
	iaddq $8, %rdi		# src++ , no need to use %r10, less instructions and less registers are used. 
	iaddq $8, %rsi		# dst++ , no need to use %r10, less instructions and less registers are used. 
	andq %rdx,%rdx		# len > 0?
	jg Loop			# if so, goto Loop:

Done:
	ret

End:
#/* $end ncopy-ys */
